### 序-三个重要构成组件
### 1：日志优先级（ERROR、INFO等）
### 2：日志输出的目的地
### 3：日志输出格式

### 设置根logger，第一个是打印日志级别，如果设置为info，那么整个debug日志都不会出现，后面是设置日志输出位置###
log4j.rootLogger=debug,D,E,console

### 输出信息到控制台 ? 这里的疑问，stdout没有在上面显示设置过，那就是默认的###

### appdener的类型有以下几种：
### 1.org.apache.log4j.ConsoleAppender（控制台）
### 2.org.apache.log4j.FileAppender（文件）
### 3.org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）
### 4.org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）
### 5.org.apache.log4j.WriterAppender（字节流）
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=[%d][%t][%p][%c][%X{log4jbiz}][%X{log4jconsumer}] - %m%n
##[%p][%r][%c][%t][%d{yyyy-MM-dd HH:mm:ss}][%l]%m%n

### layout的类型有以下几种：
### 1.org.apache.log4j.HTMLLayout（以HTML表格形式布局）
### 2.org.apache.log4j.PatternLayout（可以灵活地指定布局模式）
### 3.org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串）
### 4.org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）

### 格式化信息格式：
### %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL  
### %r 输出自应用启动到输出该log信息耗费的毫秒数  
### %c 输出所属的类目，通常就是所在类的全名  
### %t 输出产生该日志事件的线程名  
### %n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”  
### %m 输出代码中指定的内容
### %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921  
### %l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%p]{yyyy-MM-ddHH:mm:ss,SSS}method:%l%n%m%n

### 输出DEBUG 级别以上的日志到=E://logs/error.log ###
log4j.appender.D=org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File=E:/output/logs/info.log
log4j.appender.D.Append=true
log4j.appender.D.Threshold=DEBUG
log4j.appender.D.layout=org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern=%-d{yyyy-MM-ddHH:mm:ss}[%t:%r]-[%p]%m%n

### 输出ERROR 级别以上的日志到=E://logs/error.log ###
log4j.appender.E=org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.File=E:/output/logs/error.log
log4j.appender.E.Append=true
log4j.appender.E.Threshold=ERROR
log4j.appender.E.layout=org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern=%-d{yyyy-MM-ddHH:mm:ss}[%t:%r]-[%p]
